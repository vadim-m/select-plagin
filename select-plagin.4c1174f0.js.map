{"version":3,"sources":["select/select.js","index.js"],"names":["getTemplate","data","placeholder","selectedId","text","items","map","item","cls","id","value","join","Select","selector","options","$el","document","querySelector","event","type","target","dataset","toggle","select","querySelectorAll","forEach","classList","remove","add","$value","textContent","current","close","isOpen","open","$arrow","removeEventListener","clickHandler","innerHTML","contains","find","bind","addEventListener","window","s"],"mappings":";AAgEG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,MAAA,IAAA,UAAA,kDAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EA/DH,IAAMA,EAAc,WAACC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAIC,EAA4B,UAAA,OAAA,EAAA,UAAA,QAAA,EAAfC,EAAe,UAAA,OAAA,EAAA,UAAA,QAAA,EAGtDC,EAAOF,MAAAA,EAAAA,EAAe,sBAGpBG,EAAQJ,EAAKK,IAAI,SAACC,GAClBC,IAAAA,EAAM,GAQwBA,OAL9BD,EAAKE,IAAMN,IACbC,EAAOG,EAAKG,MACZF,EAAM,0BAG0BA,2BAAAA,OAAAA,EAAmCD,iCAAAA,OAAAA,EAAKE,GAAOF,MAAAA,OAAAA,EAAKG,MAAtF,WAM8BN,MAAAA,uJAAAA,OAAAA,EAKtBC,+LAAAA,OAAAA,EAAMM,KAAK,IARrB,uCA6CC,EAAA,IAAA,QAAA,EAAA,IAAA,QA9BUC,EAAAA,WAECC,SAAAA,EAAAA,EAAUC,GAAS,EAAA,KAAA,GAAA,EAAA,IAAA,MAAA,EAAA,IAAA,MAExBC,KAAAA,IAAMC,SAASC,cAAcJ,GAE7BC,KAAAA,QAAUA,EACVX,KAAAA,WAAaW,EAAQX,WAG1B,EAAA,KAAA,EAAA,GAAA,KAAA,MACA,EAAA,KAAA,EAAA,GAAA,KAAA,MAmBD,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,eAGYe,MAAAA,SAAAA,GACHC,IAAAA,EAASD,EAAME,OAAOC,QAAtBF,KAGJA,GAAS,UAATA,GAA6B,UAATA,GAA6B,UAATA,EACrCG,KAAAA,cACA,GAAa,SAATH,EAAiB,CACpBV,IAAAA,EAAKS,EAAME,OAAOC,QAAQZ,GAC3Bc,KAAAA,OAAOd,OACM,aAATU,GACJG,KAAAA,WAbR,CAAA,IAAA,SA4BMb,MAAAA,SAAAA,GACAN,KAAAA,WAAaM,EAGbM,KAAAA,IAAIS,iBAAiB,sBAAsBC,QAAQ,SAAClB,GACvDA,EAAKmB,UAAUC,OAAO,4BAInBZ,KAAAA,IACFE,cAA2B,aAAA,OAAA,KAAKd,WAChCuB,OAAAA,UAAUE,IAAI,0BAEZC,KAAAA,OAAOC,YAAc,KAAKC,QAAQrB,MAClCsB,KAAAA,UA1CN,CAAA,IAAA,SA8CQ,MAAA,WACFC,KAAAA,OAAS,KAAKD,QAAU,KAAKE,SA/CnC,CAAA,IAAA,OAmDM,MAAA,WACAnB,KAAAA,IAAIW,UAAUE,IAAI,QAClBO,KAAAA,OAAOT,UAAUE,IAAI,gBArD3B,CAAA,IAAA,QAyDO,MAAA,WACDb,KAAAA,IAAIW,UAAUC,OAAO,QACrBQ,KAAAA,OAAOT,UAAUC,OAAO,gBA3D9B,CAAA,IAAA,UA+DS,MAAA,WACHZ,KAAAA,IAAIqB,oBAAoB,QAAS,KAAKC,cACtCtB,KAAAA,IAAIuB,UAAY,KAjEtB,CAAA,IAAA,SAkBY,IAAA,WACJ,OAAA,KAAKvB,IAAIW,UAAUa,SAAS,UAnBpC,CAAA,IAAA,UAuBa,IAAA,WAAA,IAAA,EAAA,KACL,OAAA,KAAKzB,QAAQb,KAAKuC,KAAK,SAACjC,GAASA,OAAAA,EAAKE,KAAO,EAAKN,iBAxB1D,EA9BUS,GA8BV,QAAA,OAAA,EAfS,IAAA,EAAA,WACAV,IAAAA,EAAgB,KAAKY,QAArBZ,YACAD,EAAS,KAAKa,QAAdb,KACAE,EAAe,KAAKW,QAApBX,WACHY,KAAAA,IAAIW,UAAUE,IAAI,UAClBb,KAAAA,IAAIuB,UAAYtC,EAAYC,EAAMC,EAAaC,IAI7C,EAAA,WACFkC,KAAAA,aAAe,KAAKA,aAAaI,KAAK,MACtC1B,KAAAA,IAAI2B,iBAAiB,QAAS,KAAKL,cAEnCF,KAAAA,OAAS,KAAKpB,IAAIE,cAAc,uBAChCY,KAAAA,OAAS,KAAKd,IAAIE,cAAc;;;;AC7CzC,aAlBA,IAAA,EAAA,QAAA,mBACA,QAAA,uBAGA,IAAMM,EAAS,IAAIX,EAAJ,OAAW,UAAW,CAEnCV,YAAa,oBAEbD,KAAM,CACJ,CAAEQ,GAAI,IAAKC,MAAO,SAClB,CAAED,GAAI,IAAKC,MAAO,OAClB,CAAED,GAAI,IAAKC,MAAO,WAClB,CAAED,GAAI,IAAKC,MAAO,QAClB,CAAED,GAAI,IAAKC,MAAO,QAClB,CAAED,GAAI,IAAKC,MAAO,SAItBiC,OAAOC,EAAIrB","file":"select-plagin.4c1174f0.js","sourceRoot":"..","sourcesContent":["// фуннкция\nconst getTemplate = (data = [], placeholder, selectedId) => {\n  // проверяем передали мы placeholder/если нет то текст по умолчанию.\n  // `??` новый оператор для проверки на != null\n  let text = placeholder ?? \"Текст по умолчанию.\";\n\n  // забираем items из data для последущего рендера\n  const items = data.map((item) => {\n    let cls = \"\"; //пустой класс для отметки цветом выбранного эл-та по умолчанию. далее видно в if\n\n    // если есть элемент, у которого совпадает id с selectedId меняем ему текст и добавляем класс\n    if (item.id == selectedId) {\n      text = item.value;\n      cls = \"select__item--selected\";\n    }\n\n    return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id =\"${item.id}\">${item.value}</li>`;\n  });\n\n  return `\n    <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\n    <div class=\"select__input\" data-type=\"input\">\n        <span data-type=\"value\">${text}</span>\n        <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" data-type=\"arrow\"></i>\n      </div>\n      <div class=\"select__dropdown\">\n        <ul class=\"select__list\">\n          ${items.join(\"\")}\n        </ul> \n      </div>\n  `;\n};\n\n// экспортируем класс Селект (class Select - объявление класса)\nexport class Select {\n  // метод constructor для создания и инициализации объектов, созданных, с помощью класса.\n  constructor(selector, options) {\n    // создаем переменную $el - типа дом нода корневого элемента с id #select\n    this.$el = document.querySelector(selector);\n    // получаем список селекторов\n    this.options = options;\n    this.selectedId = options.selectedId;\n\n    //вызываем метод для рендера разметки в корневой элемент и его настройки\n    this.#render();\n    this.#setup();\n  }\n\n  // метод для отрисовки шаблона html в корневой элемент. # приватный метод!\n  #render() {\n    const { placeholder } = this.options;\n    const { data } = this.options;\n    const { selectedId } = this.options;\n    this.$el.classList.add(\"select\");\n    this.$el.innerHTML = getTemplate(data, placeholder, selectedId);\n  }\n\n  // метод для настройки корневого элемента. добавляем динамики\n  #setup() {\n    this.clickHandler = this.clickHandler.bind(this); // байнд контекста this !??!\n    this.$el.addEventListener(\"click\", this.clickHandler);\n    // получаем доступ к стрелке и тексту выбранного элемента\n    this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\n    this.$value = this.$el.querySelector('[data-type=\"value\"]');\n  }\n\n  // метод для отработки кликов по элементу\n  clickHandler(event) {\n    const { type } = event.target.dataset;\n\n    // если клик попал по инпуту или тексту в нем или по стрелке то вызывем метод смены класса toggle\n    if (type === \"input\" || type === \"arrow\" || type === \"value\") {\n      this.toggle();\n    } else if (type === \"item\") {\n      const id = event.target.dataset.id;\n      this.select(id);\n    } else if (type === \"backdrop\") {\n      this.toggle();\n    }\n  }\n\n  // геттер для проверки наличия класса у элемента $el\n  get isOpen() {\n    return this.$el.classList.contains(\"open\");\n  }\n\n  // геттер для поиска выбранного элемента\n  get current() {\n    return this.options.data.find((item) => item.id === this.selectedId);\n  }\n\n  // метод для логики выбора элемента из списка\n  select(id) {\n    this.selectedId = id;\n\n    // сначала удаляем все классы 'select__item--selected' для других элементов\n    this.$el.querySelectorAll('[data-type=\"item\"]').forEach((item) => {\n      item.classList.remove(\"select__item--selected\");\n    });\n\n    // потом устанавливаем класс для выбранного\n    this.$el\n      .querySelector(`[data-id='${this.selectedId}']`)\n      .classList.add(\"select__item--selected\");\n\n    this.$value.textContent = this.current.value;\n    this.close();\n  }\n\n  // метод для открытия/закрытия дроп меню\n  toggle() {\n    this.isOpen ? this.close() : this.open();\n  }\n\n  // метод для открытия dropdown\n  open() {\n    this.$el.classList.add(\"open\");\n    this.$arrow.classList.add(\"fa--rotate\");\n  }\n\n  // метод для закрытия dropdown\n  close() {\n    this.$el.classList.remove(\"open\");\n    this.$arrow.classList.remove(\"fa--rotate\");\n  }\n\n  // метод для удаления addEveList\n  destroy() {\n    this.$el.removeEventListener(\"click\", this.clickHandler);\n    this.$el.innerHTML = '';\n  }\n}\n","import { Select } from \"./select/select\";\nimport \"./select/style.scss\";\n\n// передаем в констурктор класса 2 параметра - селектор элемента и объект разлиных настроек\nconst select = new Select(\"#select\", {\n  // опции, которые мы передаем для конструктора Select\n  placeholder: \"Выберите элемент:\",\n  // selectedId: \"2\", // элемент по умолчанию, просто как доп фишка\n  data: [\n    { id: \"1\", value: \"React\" },\n    { id: \"2\", value: \"Vue\" },\n    { id: \"3\", value: \"Angular\" },\n    { id: \"4\", value: \"Next\" },\n    { id: \"5\", value: \"Nest\" },\n    { id: \"6\", value: \"JS\" },\n  ],\n});\n\nwindow.s = select;\n"]}